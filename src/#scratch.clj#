(defn equal-to [n]
        (fn [k] (== k n)))

(defn my-some [pred a-seq]
  (let [filtered-seq (filter pred a-seq)]
    (if (> (count filtered-seq) 0) (first filtered-seq) (boolean nil))))

(defn prime? [n]
  (let [divides-n? (fn [x] (= (mod n x) 0))
        pot-divs (range n)
        true-divs (filter divides-n? pot-divs)]
    (= (count true-divs) 1)))